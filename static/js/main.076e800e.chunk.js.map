{"version":3,"sources":["assets/logo.png","assets/JohnSimmonsResume.pdf","components/AboutMe/AboutMe.js","components/PortfolioList/PortfolioList.js","components/ColorSwatch/ColorSwatch.js","App.js","serviceWorker.js","fontawesome.js","index.js"],"names":["module","exports","aboutMe","props","isAboutOpen","className","src","logo","width","alt","href","resume","target","rel","icon","size","onClick","toggleAbout","data-tip","portfolioList","colorswatch","position","App","state","setState","AboutMe","this","PortfolioList","ColorSwatch","effect","Component","Boolean","window","location","hostname","match","library","add","faLinkedin","faEnvelope","faFile","faTools","faChevronDown","faChevronUp","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,+SCmF5BC,EA7EC,SAACC,GAEjB,IAAID,EAAU,KAoEZ,OAjEEA,EADCC,EAAMC,YAEL,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,IAAMC,MAAM,QAAQC,IAAI,UAGpC,yBAAKJ,UAAU,WACb,wBAAIA,UAAU,kBAAd,gBAGA,uBAAGA,UAAU,gBAAb,+BAGA,uBAAGA,UAAU,gBAAb,2BAKF,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,gBAAgBK,KAAMC,IAAQC,OAAO,SAASC,IAAI,uBAC7D,kBAAC,IAAD,CAAiBC,KAAM,OAAQC,KAAK,OACpC,uBAAGV,UAAU,uBAAb,cAEF,uBAAGA,UAAU,gBAAgBK,KAAK,8CAA8CE,OAAO,SAASC,IAAI,uBAClG,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,YAAaC,KAAK,OACjD,uBAAGV,UAAU,uBAAb,aAEF,uBAAGA,UAAU,gBAAgBK,KAAK,iCAChC,kBAAC,IAAD,CAAiBI,KAAM,WAAYC,KAAK,OACxC,uBAAGV,UAAU,uBAAb,WAIJ,kBAAC,IAAD,CACAS,KAAM,aACNC,KAAK,KACLV,UAAU,oBACVW,QAASb,EAAMc,YACfC,WAAS,eAKX,yBAAKb,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,IAAMC,MAAM,OAAOC,IAAI,UAGnC,yBACEJ,UAAU,aACVW,QAASb,EAAMc,YACfC,WAAS,YACT,wBAAIb,UAAU,qBAAd,gBAGA,kBAAC,IAAD,CACES,KAAM,eACNC,KAAK,KACLV,UAAU,cAQhB,yBAAKA,UAAU,WACZH,IC9DMiB,G,MAbO,SAAChB,GAEvB,OACI,yBAAKE,UAAU,iBACb,kBAAC,IAAD,CACES,KAAM,QACNC,KAAK,OACP,wBAAIV,UAAU,aAAd,sBACA,gFCQSe,G,MAjBK,SAACjB,GACnB,OACE,yBAAKE,UAAU,eACb,yBAAKA,UAAWF,EAAMkB,UACpB,yBAAKH,WAAS,qCAAqCb,UAAU,qBAC3D,yBAAKA,UAAU,yBAEf,yBAAKA,UAAU,2BAEf,yBAAKA,UAAU,mCC4CViB,G,kNAzCbC,MAAQ,CACFnB,aAAa,G,EAGnBa,YAAc,WAET,EAAKM,MAAMnB,YACZ,EAAKoB,SACH,CAAEpB,aAAa,IAGjB,EAAKoB,SACH,CAAEpB,aAAa,K,uDAMnB,OACE,yBAAKC,UAAU,OACb,kBAACoB,EAAD,CACErB,YAAasB,KAAKH,MAAMnB,YACxBa,YAAaS,KAAKT,eAGlBS,KAAKH,MAAMnB,aACX,kBAACuB,EAAD,MAGF,kBAACC,EAAD,CACEP,SAAS,aAGX,kBAAC,IAAD,CACAQ,OAAO,e,GApCGC,cCAEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BCRNC,IAAQC,IACNC,IACAC,IACAC,IACAC,IACAC,IACAC,KCRFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SFuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.076e800e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.de29fdbd.png\";","module.exports = __webpack_public_path__ + \"static/media/JohnSimmonsResume.fbaf68fa.pdf\";","import React from 'react';\nimport logo from '../../assets/logo.png';\nimport resume from '../../assets/JohnSimmonsResume.pdf';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst aboutMe = (props) => {\n\nlet aboutMe = null;\n\n  if(props.isAboutOpen){\n    aboutMe = (\n      <div className=\"am-wrapper bg\">\n        <div className=\"am-logo bg\">\n          <img src={logo} width=\"128px\" alt='logo'/>\n        </div>\n\n        <div className=\"am-info\">\n          <h1 className=\"am-info-header\">\n            John Simmons\n          </h1>\n          <p className=\"am-info-text\">\n            Product Designer at Persado\n          </p>\n          <p className=\"am-info-text\">\n            Currently Based in NYC\n          </p>\n        </div>\n\n        <div className=\"am-action-btns\">\n          <a className=\"am-action-btn\" href={resume} target='_blank' rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={'file'} size=\"3x\"/>\n            <p className=\"am-action-btn-label\">Resum√©</p>\n          </a>\n          <a className=\"am-action-btn\" href=\"https://www.linkedin.com/in/johnsimmonsnyc/\" target='_blank' rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={['fab', 'linkedin']} size=\"3x\"/>\n            <p className=\"am-action-btn-label\">Linkedin</p>\n          </a>\n          <a className=\"am-action-btn\" href=\"mailto:jsimmons2705@gmail.com\">\n            <FontAwesomeIcon icon={'envelope'} size=\"3x\"/>\n            <p className=\"am-action-btn-label\">Email</p>\n          </a>\n        </div>\n\n        <FontAwesomeIcon\n        icon={'chevron-up'}\n        size=\"3x\"\n        className=\"am-tray-icon open\"\n        onClick={props.toggleAbout}\n        data-tip=\"Portfolio\"/>\n      </div>\n    );\n  } else {\n    aboutMe = (\n      <div className=\"am-wrapper sm\">\n        <div className=\"am-logo sm\">\n          <img src={logo} width=\"64px\" alt='logo'/>\n        </div>\n\n        <div\n          className=\"am-info sm\"\n          onClick={props.toggleAbout}\n          data-tip=\"About Me\">\n          <h2 className=\"am-info-header sm\">\n            John Simmons\n          </h2>\n          <FontAwesomeIcon\n            icon={'chevron-down'}\n            size=\"2x\"\n            className=\"am-icon\"/>\n        </div>\n      </div>\n    );\n  }\n\n\n  return (\n      <div className=\"AboutMe\">\n        {aboutMe}\n      </div>\n  )\n}\n\nexport default aboutMe;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst portfolioList = (props) => {\n\nreturn (\n    <div className=\"PortfolioList\">\n      <FontAwesomeIcon\n        icon={'tools'}\n        size=\"5x\"/>\n      <h1 className=\"pl-header\">Under Construction</h1>\n      <p>Nothing to see right now but check back later!</p>\n    </div>\n)\n}\n\nexport default portfolioList;\n","import React from 'react';\n\nconst colorswatch = (props) => {\n  return (\n    <div className=\"ColorSwatch\">\n      <div className={props.position}>\n        <div data-tip=\"Designed and Built by John Simmons\" className=\"cs-color-swatches\">\n          <div className=\"cs-color-swatch blue\">\n          </div>\n          <div className=\"cs-color-swatch orange\">\n          </div>\n          <div className=\"cs-color-swatch off-white\">\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default colorswatch;\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport ReactTooltip from \"react-tooltip\";\n\nimport AboutMe from \"./components/AboutMe/AboutMe\"\nimport './components/AboutMe/AboutMe.css'\nimport PortfolioList from \"./components/PortfolioList/PortfolioList\"\nimport './components/PortfolioList/PortfolioList.css'\nimport ColorSwatch from \"./components/ColorSwatch/ColorSwatch\"\nimport './components/ColorSwatch/ColorSwatch.css'\n\nclass App extends Component {\n\n  state = {\n        isAboutOpen: true,\n    }\n\n  toggleAbout = () => {\n    //const stateCopy = [...this.state];\n    if(this.state.isAboutOpen){\n      this.setState(\n        { isAboutOpen: false }\n      );\n    } else{\n      this.setState(\n        { isAboutOpen: true }\n      );\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <AboutMe\n          isAboutOpen={this.state.isAboutOpen}\n          toggleAbout={this.toggleAbout}\n        ></AboutMe>\n\n        {!this.state.isAboutOpen && (\n          <PortfolioList></PortfolioList>\n        )}\n\n        <ColorSwatch\n          position=\"cs-btm-r\">\n        </ColorSwatch>\n\n        <ReactTooltip\n        effect=\"solid\"\n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport {\n  faEnvelope,\n  faFile,\n  faTools,\n  faChevronDown,\n  faChevronUp\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faLinkedin,\n  faEnvelope,\n  faFile,\n  faTools,\n  faChevronDown,\n  faChevronUp\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './fontawesome.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}